{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://partner-api.getoliver.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/services/user/v1/auth/sign-in": {
      "post": {
        "security": [],
        "description": "Authenticate with the API",
        "requestBody": {
          "description": "Sign in credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/time_slots/open_times": {
      "post": {
        "description": "Returns open times for a given provider, appointment type, etc.",
        "requestBody": {
          "description": "Open times request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTimesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Open times response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenTimesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignInRequest": {
        "type": "object",
        "required": [
          "username",
          "password",
          "role"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Always set to `ROLE_API`"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "required": [
              "token"
            ],
            "properties": {
              "token": {
                "type": "string",
                "description": "JWT Bearer token"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SignInError": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string",
            "description": "Incorrect email"
          }
        }
      },
      "OpenTimesRequest": {
        "type": "object",
        "required": [
          "date",
          "appointment_type_id",
          "provider_ids"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The current date in ISO 8601 format",
            "example": "2025-01-01T00:00:00Z"
          },
          "days_to_check": {
            "type": "integer",
            "description": "The number of days out to check at a time for open times. A smaller number may return results faster, but may not return available open times if none are available in the window specified.",
            "default": 30
          },
          "max_attempts": {
            "type": "integer",
            "description": "The number of times to iterate over days_to_check to find open times. For example, if days_to_check is 3, and max_attempts is 1, the API will check 3 days for open times for up to 3 days from now and return, regardless of whether it finds open times or not. If days_to_check is 3, and max_attempts is 10, the API will effectively check 30 days for open times, but will return the first result as soon as it finds open times.",
            "default": 4
          },
          "appointment_type_id": {
            "type": "string",
            "description": "The ID of the appointment type to check for open times."
          },
          "provider_ids": {
            "type": "array",
            "description": "An array of provider IDs to check for open times. If an empty array is provided, the API will check for open times for all providers that service the specified appointment type.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpenTimesResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenTime"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "OpenTime": {
        "type": "object",
        "required": [
          "date",
          "start_date",
          "available",
          "times"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "example": "MM/DD/YYYY"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01T00:00:00-06:00"
          },
          "available": {
            "type": "boolean",
            "example": true
          },
          "times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlot"
            }
          }
        }
      },
      "TimeSlot": {
        "type": "object",
        "required": [
          "dateTime",
          "internal_start",
          "internal_end",
          "label",
          "enabled",
          "provider_id",
          "value"
        ],
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T16:00:00-06:00"
          },
          "internal_start": {
            "type": "string",
            "format": "time",
            "example": "2025-01-01T16:00:00-06:00"
          },
          "internal_end": {
            "type": "string",
            "format": "time",
            "example": "2025-01-01T16:20:00-06:00"
          },
          "label": {
            "type": "string",
            "example": "4:00 pm"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "provider_id": {
            "type": "string"
          },
          "room_id": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "16:00"
          }
        }
      },
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
