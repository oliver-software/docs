{
  "openapi": "3.1.0",
  "info": {
    "title": "Oliver Partner API",
    "description": "API for partners to interact with Oliver",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://partner-api.getoliver.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/services/user/v1/auth/sign-in": {
      "post": {
        "security": [],
        "description": "Authenticate with the API",
        "requestBody": {
          "description": "Sign in credentials. You may obtain your partner authentication credentials from engineering@getoliver.com",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/open_times": {
      "post": {
        "description": "Search for open times for a given provider, appointment type, etc. Can be used to find open times in the future or past.",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Open times request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTimesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Open times response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenTimesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/appointments": {
      "post": {
        "description": "Create an appointment",
        "requestBody": {
          "description": "Appointment to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppointmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/appointment_types": {
      "get": {
        "description": "List appointment types",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Optionally filter appointment types by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of appointment types found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentType"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/appointment_types/{id}": {
      "get": {
        "description": "Get an appointment type by ID",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the appointment type to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment type found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AppointmentType"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/providers": {
      "get": {
        "description": "List providers",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Optionally filter providers by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of providers found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Provider"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/providers/{id}": {
      "get": {
        "description": "Get a provider by ID",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the provider to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Provider found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Provider"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/clients": {
      "get": {
        "description": "List clients using filters",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter clients by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter clients by email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Filter clients by phone",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of clients found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Client"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/clients/{id}": {
      "get": {
        "description": "Get a client by ID",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the client to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Client"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/rooms": {
      "get": {
        "description": "List rooms",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Optionally filter rooms by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of rooms found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Room"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/rooms/{id}": {
      "get": {
        "description": "Get a room by ID",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the room to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Room"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/patients": {
      "get": {
        "description": "List patients for a specific client. Requires client_id and optionally filters by name.",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The ID of the client whose patients to list",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Optionally filter patients by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of patients found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Patient"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/open_api/v1/patients/{id}": {
      "get": {
        "description": "Get a patient by ID",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "The location id of the practice",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the patient to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Patient"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
  },
  "components": {
    "schemas": {
      "SignInRequest": {
        "type": "object",
        "required": [
          "username",
          "password",
          "role"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Always set to `ROLE_API`"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "required": [
              "token"
            ],
            "properties": {
              "token": {
                "type": "string",
                "description": "JWT Bearer token"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SignInError": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string",
            "description": "Incorrect email"
          }
        }
      },
      "GeneralError": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "OpenTimesRequest": {
        "type": "object",
        "required": [
          "exact_start_date",
          "appointment_type_id"
        ],
        "properties": {
          "exact_start_date": {
            "type": "string",
            "format": "date",
            "description": "The start date/time of the search in ISO 8601 format. Can be a past, present, or future timestamp.",
            "example": "2025-01-01T07:00:00Z"
          },
          "days_to_check": {
            "type": "integer",
            "description": "The number of days from exact_start_date to check at a time for open times. A smaller number may return results faster because the API will first return results if there are open times available in the window specified. A large number, such as 30, won't return results until all 30 days are searched.",
            "default": 7
          },
          "max_attempts": {
            "type": "integer",
            "description": "The number of times to iterate over days_to_check to find open times. For example, if days_to_check is 3, and max_attempts is 1, the API will check 3 days for open times for up to 3 days from exact_start_date and return, regardless of whether it finds open times or not. If days_to_check is 3, and max_attempts is 10, the API will check *up to* 30 days (3 * 10) for open times, but will return the first result as soon as it finds open times in any 3 day window.",
            "default": 1
          },
          "appointment_type_id": {
            "type": "string",
            "description": "The ID of the appointment type to check for open times."
          },
          "provider_ids": {
            "type": "array",
            "description": "An array of provider IDs to check for open times. If an empty array is provided, the API will check for open times for all providers that service the specified appointment type.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpenTimesResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenTime"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "OpenTime": {
        "type": "object",
        "required": [
          "date",
          "available",
          "times"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "example": "MM/DD/YYYY",
            "description": "The date of this result in MM/DD/YYYY format"
          },
          "available": {
            "type": "boolean",
            "example": true,
            "description": "Whether this result has open times"
          },
          "times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlot"
            },
            "description": "An array of open times for this date"
          }
        }
      },
      "TimeSlot": {
        "type": "object",
        "required": [
          "start",
          "end",
          "label",
          "provider_id",
          "value",
          "uuid"
        ],
        "properties": {
          "start": {
            "type": "string",
            "format": "time",
            "description": "The start time of this result formatted as 2025-01-01T16:00:00-06:00"
          },
          "end": {
            "type": "string",
            "format": "time",
            "description": "The end time of this result formatted as 2025-01-01T16:20:00-06:00 (20 minutes after the start time)"
          },
          "provider_id": {
            "type": "string",
            "description": "The ID of the provider that this result is for"
          },
          "room_id": {
            "type": "string",
            "description": "The ID of the room that this result is for, if applicable"
          },
          "value": {
            "type": "string",
            "description": "The time value of this result formatted like 16:00"
          },
          "label": {
            "type": "string",
            "description": "The label of this result formatted like 4:00 pm"
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of this result. Can be passed back to the API along with client and patient information to create an appointment with this open time result."
          }
        }
      },
      "CreateAppointmentRequest": {
        "type": "object",
        "required": [
          "date",
          "end_date",
          "provider_id",
          "appointment_type_id",
          "patient_id",
          "client_id"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The start date/time of the appointment in ISO 8601 format"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "The end date/time of the appointment in ISO 8601 format"
          },
          "provider_id": {
            "type": "string",
            "description": "The ID of the provider that this appointment is for"
          },
          "appointment_type_id": {
            "type": "string",
            "description": "The ID of the appointment type that this appointment is for"
          },
          "note": {
            "type": "string",
            "description": "A note for the appointment"
          },
          "patient_id": {
            "type": "string",
            "description": "The ID of the patient that this appointment is for"
          },
          "client_id": {
            "type": "string",
            "description": "The ID of the client that this appointment is for"
          },
          "room_id": {
            "type": "string",
            "description": "The ID of the room that this appointment is for"
          },
          "referral_source": {
            "type": "string",
            "description": "The partner's referral source for this appointment. e.g. 'Google', 'Facebook', 'Website', etc."
          }
        }
      },
      "CreateAppointmentResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the appointment that was created"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AppointmentType": {
        "type": "object",
        "required": [
          "id",
          "name",
          "duration",
          "provider_ids",
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the appointment type"
          },
          "name": {
            "type": "string",
            "description": "The name of the appointment type"
          },
          "duration": {
            "type": "integer",
            "description": "The duration of the appointment type in minutes"
          },
          "provider_ids": {
            "type": "array",
            "description": "The IDs of the providers that can service this appointment type"
          }
        }
      },
      "Provider": {
        "type": "object",
        "required": [
          "id",
          "name",
          "appointment_type_ids",
          "room_ids"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the provider"
          },
          "name": {
            "type": "string",
            "description": "The name of the provider"
          },
          "appointment_type_ids": {
            "type": "array",
            "description": "The IDs of the appointment types that this provider offers",
            "items": {
              "type": "string"
            }
          },
          "room_ids": {
            "type": "array",
            "description": "The IDs of the rooms that this provider can be booked into. Empty if rooms are not applicable for this provider.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the client"
          },
          "name": {
            "type": "string",
            "description": "The name of the client"
          },
          "email": {
            "type": "string",
            "description": "The email address of the client"
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the client"
          },
          "patients": {
            "type": "array",
            "description": "List of patients associated with this client",
            "items": {
              "$ref": "#/components/schemas/Patient"
            }
          },
          "remote_id": {
            "type": "string",
            "description": "The ID of the client in the remote system it was imported from, if available"
          }
        }
      },
      "Room": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the room"
          },
          "name": {
            "type": "string",
            "description": "The name of the room"
          },
          "description": {
            "type": "string",
            "description": "A description of the room"
          }
        }
      },
      "Patient": {
        "type": "object",
        "required": [
          "id",
          "name",
          "client_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the patient"
          },
          "name": {
            "type": "string",
            "description": "The name of the patient"
          },
          "client_id": {
            "type": "string",
            "description": "The ID of the client that owns this patient"
          },
          "species": {
            "type": "string",
            "description": "The species of the patient"
          },
          "breed": {
            "type": "string",
            "description": "The breed of the patient"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
