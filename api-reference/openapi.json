{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://partner-api.getoliver.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/services/user/v1/auth/sign-in": {
      "post": {
        "security": [],
        "description": "Authenticate with the API",
        "requestBody": {
          "description": "Sign in credentials. You may obtain your partner authentication credentials from engineering@getoliver.com",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/time_slots/open_times": {
      "post": {
        "description": "Search for open times for a given provider, appointment type, etc. Can be used to find open times in the future or past.",
        "requestBody": {
          "description": "Open times request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTimesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Open times response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenTimesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/appointments": {
      "post": {
        "description": "Create an appointment",
        "requestBody": {
          "description": "Appointment to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppointmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/appointment_types": {
      "get": {
        "description": "List appointment types",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Optionally filter appointment types by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of appointment types found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentType"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/appointment_types/{id}": {
      "get": {
        "description": "Get an appointment type by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the appointment type to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment type found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AppointmentType"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/providers": {
      "get": {
        "description": "List providers",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Optionally filter providers by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of providers found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Provider"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/services/core/v1/providers/{id}": {
      "get": {
        "description": "Get a provider by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the provider to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Provider found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "data"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Provider"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignInRequest": {
        "type": "object",
        "required": [
          "username",
          "password",
          "role"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Always set to `ROLE_API`"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "required": [
              "token"
            ],
            "properties": {
              "token": {
                "type": "string",
                "description": "JWT Bearer token"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SignInError": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string",
            "description": "Incorrect email"
          }
        }
      },
      "GeneralError": {
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "OpenTimesRequest": {
        "type": "object",
        "required": [
          "exact_start_date",
          "appointment_type_id",
          "provider_ids"
        ],
        "properties": {
          "exact_start_date": {
            "type": "string",
            "format": "date",
            "description": "The start date/time of the search in ISO 8601 format. Can be a past, present, or future timestamp.",
            "example": "2025-01-01T07:00:00Z"
          },
          "days_to_check": {
            "type": "integer",
            "description": "The number of days from exact_start_date to check at a time for open times. A smaller number may return results faster because the API will first return results if there are open times available in the window specified.",
            "default": 30
          },
          "max_attempts": {
            "type": "integer",
            "description": "The number of times to iterate over days_to_check to find open times. For example, if days_to_check is 3, and max_attempts is 1, the API will check 3 days for open times for up to 3 days from exact_start_date and return, regardless of whether it finds open times or not. If days_to_check is 3, and max_attempts is 10, the API will effectively check 30 days for open times, but will return the first result as soon as it finds open times.",
            "default": 4
          },
          "appointment_type_id": {
            "type": "string",
            "description": "The ID of the appointment type to check for open times."
          },
          "provider_ids": {
            "type": "array",
            "description": "An array of provider IDs to check for open times. If an empty array is provided, the API will check for open times for all providers that service the specified appointment type.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpenTimesResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenTime"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "OpenTime": {
        "type": "object",
        "required": [
          "date",
          "start_date",
          "available",
          "times"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "example": "MM/DD/YYYY",
            "description": "The date of this result in MM/DD/YYYY format"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01T00:00:00-06:00",
            "description": "The date of this result in ISO 8601 format"
          },
          "available": {
            "type": "boolean",
            "example": true,
            "description": "Whether this result has open times"
          },
          "times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlot"
            },
            "description": "An array of open times for this date"
          }
        }
      },
      "TimeSlot": {
        "type": "object",
        "required": [
          "internal_start",
          "internal_end",
          "label",
          "provider_id",
          "value"
        ],
        "properties": {
          "internal_start": {
            "type": "string",
            "format": "time",
            "description": "The start time of this result formatted as 2025-01-01T16:00:00-06:00"
          },
          "internal_end": {
            "type": "string",
            "format": "time",
            "description": "The end time of this result formatted as 2025-01-01T16:20:00-06:00 (20 minutes after the start time)"
          },
          "provider_id": {
            "type": "string",
            "description": "The ID of the provider that this result is for"
          },
          "room_id": {
            "type": "string",
            "description": "The ID of the room that this result is for, if applicable"
          },
          "value": {
            "type": "string",
            "description": "The time value of this result formatted like 16:00"
          },
          "label": {
            "type": "string",
            "description": "The label of this result formatted like 4:00 pm"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Whether this result is enabled"
          }
        }
      },
      "CreateAppointmentRequest": {
        "type": "object",
        "required": [
          "date",
          "end_date",
          "provider_id",
          "appointment_type_id",
          "patient_id",
          "client_id"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The start date/time of the appointment in ISO 8601 format"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "The end date/time of the appointment in ISO 8601 format"
          },
          "provider_id": {
            "type": "string",
            "description": "The ID of the provider that this appointment is for"
          },
          "appointment_type_id": {
            "type": "string",
            "description": "The ID of the appointment type that this appointment is for"
          },
          "note": {
            "type": "string",
            "description": "A note for the appointment"
          },
          "patient_id": {
            "type": "string",
            "description": "The ID of the patient that this appointment is for"
          },
          "client_id": {
            "type": "string",
            "description": "The ID of the client that this appointment is for"
          },
          "room_id": {
            "type": "string",
            "description": "The ID of the room that this appointment is for"
          },
          "referral_source": {
            "type": "string",
            "description": "The partner's referral source for this appointment. e.g. 'Google', 'Facebook', 'Website', etc."
          }
        }
      },
      "CreateAppointmentResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the appointment that was created"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AppointmentType": {
        "type": "object",
        "required": [
          "id",
          "name",
          "duration",
          "provider_ids",
          "room_ids"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the appointment type"
          },
          "name": {
            "type": "string",
            "description": "The name of the appointment type"
          },
          "duration": {
            "type": "integer",
            "description": "The duration of the appointment type in minutes"
          },
          "provider_ids": {
            "type": "array",
            "description": "The IDs of the providers that can service this appointment type"
          },
          "room_ids": {
            "type": "array",
            "description": "The IDs of the rooms that can service this appointment type"
          }
        }
      },
      "Provider": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the provider"
          },
          "name": {
            "type": "string",
            "description": "The name of the provider"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
